AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro, t2.small]
  InstanceSecurityGroup:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: Security groups for instance 
  AmiId:
    Type: String  
    Default: ami-005bdb005fb00e791
  EC2Storage:
    Default: '50'
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: Enter HostedZoneId
  RecordSetType:
    Type: String
    Default: A
    AllowedValues:   
    - A
    - CNAME
    Description: Enter RecordSet Type 
  RecordSetName:
    Type: String
    Description: Enter RecordSet Name without HostedZoneName (eg.) any.example.com

Resources:
  JenkinsEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroupIds: !Ref InstanceSecurityGroup 
      KeyName: !Ref KeyName
      ImageId: !Ref AmiId    
      IamInstanceProfile: !Ref JenkinsInstanceProfile
      BlockDeviceMappings: 
      - DeviceName: "/dev/sda1"
        Ebs: 
          VolumeSize: !Ref EC2Storage
          VolumeType: "gp2"
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash                                                                     

            PUPPET_AGENT_VERSION="6.1.0"
            UBUNTU_CODENAME="bionic"
           
            sudo apt-get update
            sudo apt-get install --no-install-recommends -y wget ca-certificates lsb-release
            sudo wget https://apt.puppetlabs.com/puppet6-release-"$UBUNTU_CODENAME".deb
            sudo dpkg -i puppet6-release-"$UBUNTU_CODENAME".deb
            sudo rm puppet6-release-"$UBUNTU_CODENAME".deb
            sudo apt-get update
            sudo apt-get install --no-install-recommends -y puppet-agent="$PUPPET_AGENT_VERSION"\
            -1"$UBUNTU_CODENAME"
            sudo apt-get install -y git
            sudo mkdir -p /opt/puppetforge/modules
            sudo chmod 777 /opt/puppetforge/modules

            /opt/puppetlabs/bin/puppet --version

            #!/bin/bash

            
            PUPPET="/opt/puppetlabs/bin/puppet"
            PUPPETFORGE_MODULES_PATH="/opt/puppetforge/modules"
            GIT_HOST="bitbucket.org"
            GIT_USERNAME="jamesbmichael"
            #TODO: This has to be fetched from Environment or from AWS Secrets Manager
            GIT_ACCESSKEY='92W32wpgManx9KaeFtNy'

            function puppet_module_install() {
            #TODO: This install fails if not run with sudo. Or the modules path should be owned by the user who is running this command.
            ${!PUPPET} module install -f --target-dir ${!PUPPETFORGE_MODULES_PATH} $1 --version $2
            }

            function centizen_module_install() {
            # Check if module directory exists. If yes, just pull
            if [ -d "${!PUPPETFORGE_MODULES_PATH}/$2" ]; then
            echo "Module $2 already present."
            else
            git clone https://${!GIT_USERNAME}:${!GIT_ACCESSKEY}@${!GIT_HOST}/devops/$1.git ${!PUPPETFORGE_MODULES_PATH}/$2
            fi
            }


            echo "Installing puppet forge opensource modules"
            puppet_module_install puppetlabs-stdlib 5.1.0
            puppet_module_install puppetlabs-docker 3.1.0
            puppet_module_install puppetlabs-apt 6.2.1
            puppet_module_install puppet-nodejs 6.0.0
            puppet_module_install puppet-wget 2.0.1
            puppet_module_install puppetlabs-apache 4.0.0
            puppet_module_install puppetlabs-concat 5.3.0
            puppet_module_install puppetlabs-mysql 8.1.0
            puppet_module_install puppet-letsencrypt 4.0.0
            puppet_module_install puppetlabs-inifile 3.0.0

            echo "Installing puppet forge centizen modules"
            centizen_module_install puppet-utilities utilities
            centizen_module_install puppet-jenkins jenkins
            
            
            #!/bin/bash
            sudo /opt/puppetlabs/bin/puppet apply --modulepath=/opt/puppetforge/modules -e "include jenkins"
 
  JenkinsIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join:
        - ''
        - - !Ref AWS::StackName
          - "IAMRole"
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
  JenkinsInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: 
        Fn::Join:
        - ''
        - - !Ref AWS::StackName
          - "IAMInstanceProfile"
      Path: "/"
      Roles:
      - Ref: JenkinsIAMRole
  JenkinsIAMRolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: 
        Fn::Join:
        - ''
        - - !Ref AWS::StackName
          - "IAMRolePolicies"
      PolicyDocument:
        Statement:
        - Sid: ListObjectsInBucket
          Effect: Allow
          Action:
          - s3:ListBucket
          Resource:
          - arn:aws:s3:::centizen-jenkins
        Statement:
        - Sid: AllObjectActions
          Effect: Allow
          Action: 
          - s3:*Object
          Resource:
          - arn:aws:s3:::centizen-jenkins/*
      Roles:
      - Ref: JenkinsIAMRole
  JenkinsDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Comment: DNS name for Application Load Balancer
      Name: !Ref RecordSetName
      Type: !Ref RecordSetType
      TTL: '300'
      ResourceRecords:
      - !GetAtt JenkinsEC2Instance.PublicIp
  JenkinsEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref JenkinsEC2Instance